!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!                 Input file for PANTERA                                !!!!
!!!!                                                                       !!!!
!!!! The program reads is line by line, and when it finds a known line, it !!!!
!!!! reads and saves the value in the next one.                            !!!!
!!!! All other lines are ignored (you can comment etc).                    !!!!
!!!! You can put trailing comments on lines, starting with "!" symbol:     !!!!
!!!! the program will remove them before checking the content of a line.   !!!!
!!!!                                                                       !!!!
!!!! All units are SI [m, kg, s, ...]                                      !!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

! ========= Computational domain and grid ===========

Axial_symmetry_bool:
    .FALSE.
Domain_limits:
    -0.5  0.5      -0.5  0.5      -0.5  0.5
Domain_periodicity:
    .FALSE.   .FALSE.   .TRUE.
Domain_specular:
    .TRUE.    .TRUE.    .TRUE.    .TRUE.
Number_of_cells:
    1  1  1
Dimensions:
    2
! ========= Numerical parameters ====================

Fnum:  ! Ratio of real-to-simulated particles
    1.0E13
Timestep:
    1.E-4
Number_of_timesteps:
    10000
!200000
Stats_every:
    1

RNG_seed:
    12343
Dump_part_every:
    10001

Dump_grid_start:
    0  
    
Dump_grid_avgevery:
    1    

Dump_grid_numavgs:
    100

! ========= Multispecies ==============================

Species_file:
    ar.species
    
Def_mixture:
    Argon Ar 1.0
    
    
! ========= Collisions ==============================

Collision_type: ! [MCC / DSMC / NONE]
  DSMC 

MCC_background_dens:
  1.0e20
MCC_cross_section:  
  1.0e-18
MCC_species: ! NOT IMPLEMENTED YET!

! DSMC VHS collisions  ! NOT IMPLEMENTED YET!

DSMC_collisions_mixture:
    Argon
VSS_parameters_binary_file:
    ar.vssbin

! ========= Initial particle seed ===================

Initial_particles_bool:
    .TRUE.
Initial_particles_dens:
    1.0e17
Initial_particles_vel:
    0.  0.  0.
Initial_particles_Ttra:
    10000.0 1000.0 1000.0
Initial_particles_Trot:
    0. 
Initial_particles_mixture:
    Argon
! ========== Injection from boundaries ==============

Boundaries_inject_bool:
    .FALSE.

Boundaries_inject_which_bool:        ! From which boundary you want to inject particles
    .FALSE.  .FALSE.  .FALSE.  .FALSE. 
Boundaries_inject_dens:
    1.0e19
Boundaries_inject_vel:
    0. 0. 0.
Boundaries_inject_Ttra:
    273.0
Boundaries_inject_Trot:
    0.
Boundaries_inject_mixture:
    Argon1
! ========== Injection from line source =============

Linesource_bool:
    .FALSE.
Linesource_center:
    0.5   0.
Linesource_length_y:
    0.2
Linesource_dens:
    1.e24
Linesource_vel:
    200.  0. 0.
Linesource_Ttra:
    0.0001
Linesource_Trot:
    0.

!   center       length        density  velocity xyz         Ttr      Trot   mix
!Linesource:
!    -0.5    0.0    0.0    1.0    2.8e20    0.0    0.0    0.0    273.0    0.0    Argon
!Linesource:
!    0.5    0.0    0.0    -1.0    2.8e20    0.0    0.0    0.0    273.0    0.0    Helium

!Linesource:
!    0.0    -0.5    -1.0    0.0    1.0e19    6000.0    -2000.0    3000.0    1000.0    0.0    aria
!Linesource:
!    0.0    0.5    1.0    0.0    1.0e19    6000.0    -2000.0    3000.0    1000.0    0.0    aria

! ========= MPI parallelization =====================
! == Style for MPI domain partition can be:
! ==
! == 0: longitudinal strips (along x)
! == 1: blocks (equally sized)
!
! For "blocks" style, provide "Domain_partition_num_blocks", giving
! the number of blocks along x and y.
! We expect the number of processes to be N_BLOCKS_X*N_BLOCKS_Y

Partition_style:
    0

Partition_num_blocks:
    3  3

